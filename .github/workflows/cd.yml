name: CD Deployment

on:
  workflow_dispatch:
    inputs:
      service:
        description: "Which service to deploy"
        required: true
        default: "both"
        type: choice
        options:
          - backend
          - frontend
          - both

  repository_dispatch:
    types: [deploy-backend, deploy-frontend]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        run: |
          echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: Terraform Init & Apply
        run: |
          cd ~/GWUIM-recruitment/deployment/terraform
          terraform init
          terraform apply -auto-approve -var "grafana_admin_password=${{ secrets.GRAFANA_ADMIN_PASSWORD }}"

      - name: Generate .env file
        run: |
          mkdir -p ~/GWUIM-recruitment/recruitment-system/backend
          echo "PORT=${{ secrets.BACKEND_PORT }}" > ~/GWUIM-recruitment/recruitment-system/backend/.env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> ~/GWUIM-recruitment/recruitment-system/backend/.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> ~/GWUIM-recruitment/recruitment-system/backend/.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ~/GWUIM-recruitment/recruitment-system/backend/.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ~/GWUIM-recruitment/recruitment-system/backend/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> ~/GWUIM-recruitment/recruitment-system/backend/.env
          echo "OTP_EXPIRATION_MINUTES=${{ secrets.OTP_EXPIRATION_MINUTES }}" >> ~/GWUIM-recruitment/recruitment-system/backend/.env
          echo "SMS_API_USERNAME=${{ secrets.SMS_API_USERNAME }}" >> ~/GWUIM-recruitment/recruitment-system/backend/.env
          echo "SMS_API_PASSWORD=${{ secrets.SMS_API_PASSWORD }}" >> ~/GWUIM-recruitment/recruitment-system/backend/.env
          echo "SMS_API_URL=${{ secrets.SMS_API_URL }}" >> ~/GWUIM-recruitment/recruitment-system/backend/.env

      - name: Deploy backend
        if: |
          github.event_name == 'workflow_dispatch' && 
          (github.event.inputs.service == 'backend' || github.event.inputs.service == 'both') ||
          github.event_name == 'repository_dispatch' && github.event.action == 'deploy-backend'
        run: |
          cd ~/GWUIM-recruitment/deployment
          docker pull ghcr.io/${{ secrets.GHCR_USERNAME }}/recruitment-backend:latest
          docker compose -f docker-compose.dev.yml up -d backend

      - name: Deploy frontend
        if: |
          github.event_name == 'workflow_dispatch' && 
          (github.event.inputs.service == 'frontend' || github.event.inputs.service == 'both') ||
          github.event_name == 'repository_dispatch' && github.event.action == 'deploy-frontend'
        run: |
          cd ~/GWUIM-recruitment/deployment
          docker pull ghcr.io/${{ secrets.GHCR_USERNAME }}/recruitment-frontend:latest
          docker compose -f docker-compose.dev.yml up -d frontend
